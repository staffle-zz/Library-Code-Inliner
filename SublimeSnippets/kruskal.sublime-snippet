<snippet>
	<content><![CDATA[
struct DSU {
    int comp;
    vector<int> par, size;
    int n;

    DSU(int _n) : n(_n) {
        par.resize(n+1);
        size.resize(n+1);
        for (int i = 1; i <= n; i++) {
            par[i] = i;
            size[i] = 1;
        }
        comp = n;
    }

    inline int getpar(int x) {
        if (x == par[x]) return x;
        return par[x] = getpar(par[x]);
    }

    inline int getsize(int x) {
        return size[getpar(x)];
    }

    inline bool unite(int x, int y) {
        x = getpar(x);
        y = getpar(y);
        if (x != y) {
            if (size[x] < size[y]) swap(x, y);
            size[x] += size[y];
            par[y] = x;
            comp--;
            return true;
        }
        return false;
    }
};

struct Edge {
    int u, v, weight;
    bool operator<(Edge const& other) {
        return weight < other.weight;
    }
};

int n;
vector<Edge> edges;

    int cost = 0;
    vector<Edge> result;

    DSU dsu(n);

    sort(edges.begin(), edges.end());

    for (Edge e : edges) {
        if (dsu.getpar(e.u) != dsu.getpar(e.v)) {
            cost += e.weight;
            result.push_back(e);
            dsu.unite(e.u, e.v);
        }
    }
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>kruskal</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
